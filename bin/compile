#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail immediately on non-zero exit code.
set -e
# Fail immediately on non-zero exit code within a pipeline.
set -o pipefail
# Fail on undeclared variables.
set -u
# Debug, echo every command
#set -x

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BP_DIR=`cd $(dirname $0); cd ..; pwd`

if [ -d "$ENV_DIR" ]; then
  topic "Exporting environment variables"
  for e in $(ls $ENV_DIR); do
    if [[ $e == TERRAFORM_* ]]
      then
      echo "+ $e" | indent
      export "$e=$(cat $ENV_DIR/$e)"
    fi
  done
fi

terraform_bin="$BUILD_DIR/bin/terraform"

TERRAFORM_BIN_URL="${TERRAFORM_BIN_URL:-https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip}"

topic "Installing Terraform from ${TERRAFORM_BIN_URL}"
curl -s -L "${TERRAFORM_BIN_URL}" > "terraform-bin.zip"
mkdir -p "$BUILD_DIR/bin"
unzip -p "terraform-bin.zip" > "$terraform_bin"
chmod +x "$terraform_bin"
rm "terraform-bin.zip"

echo 'Setting up $PATH' | indent
mkdir -p "$BUILD_DIR/.profile.d"
cp $BP_DIR/.profile.d/* $BUILD_DIR/.profile.d/
